pid        /var/run/nginx.pid;
daemon off;

env REDIS_PORT_6379_TCP_ADDR;
env REDIS_PORT_6379_TCP_PORT;

events {
    worker_connections  256;
}

http {
    server {
        listen       80;
        server_name  l.com;

        location / {
            error_log  /dev/stdout debug;
            access_log  /dev/stdout;
            set $upstream "";
            rewrite_by_lua '
            local redis = require "resty.redis"
            local client = redis:new()
            local ok, err = client:connect(os.getenv("REDIS_PORT_6379_TCP_ADDR"), os.getenv("REDIS_PORT_6379_TCP_PORT"))
            if not ok then
                ngx.say("1: failed to connect: ", err)
                return
            end

            client:set("h1234", "h5678")
            client:lpush("h1234", "h5678")
            client:lpush("h1234", "h5678")
            client:lpush("h1234", "h5679")
            client:lpush("h1236", "h5679")
            client:lpush("h1236", "h5678")
            client:lpush("h1236", "h5610")


            local test1, err = client:get("h1234")
            local test2, err = client:lrange("h1236", 0, -1)
            local test3 = {"Aasdffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "B", "C", "D", "E"}


            print( test3[1] )
            ngx.say( test3[1])

            --[[

            for i = 1, 100 do
            print( table.getn.(test3) )
            end

            --]]
            ngx.var.upstream = "192.168.99.101"
            redis:close()
            ';

            proxy_pass http://$upstream;
        }
    }
}
