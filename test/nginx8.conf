user  nginx;
worker_processes  1;
pid        /var/run/nginx.pid;
daemon off;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    include /etc/nginx/conf.d/*.conf;

}
















# ヘッダの設定
proxy_redirect                          off;
proxy_set_header Host                   $host;
proxy_set_header X-Real-IP              $remote_addr;
proxy_set_header X-Forwarded-Proto      $scheme;
proxy_set_header X-Forwarded-Host       $host;
proxy_set_header X-Forwarded-Server     $host;
proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;

# タイムアウトの設定
proxy_connect_timeout 60;
proxy_read_timeout    90;
proxy_send_timeout    60;

# バッファサイズの設定
proxy_buffering  on;
proxy_buffer_size       8k;
proxy_buffers           100 8k;

# キャッシュの設定
proxy_cache_path      /var/cache/nginx/domain.co.jp levels=1:2 keys_zone=cache_domain.co.jp:15m inactive=7d max_size=1000m;
proxy_temp_path       /var/cache/nginx/temp;

proxy_cache_valid     200 2h;
proxy_cache_valid     302 2h;
proxy_cache_valid     301 4h;
proxy_cache_valid     any 1m;

    upstream any_web {
        ip_hash;
        server 127.0.0.1:80;
#       server 192.168.0.1:80 weight=5;
#       server 192.168.0.2:80 weight=5;
    }

    upstream any_websocket {
        ip_hash;
        server 127.0.0.1:8000;
#       server 192.168.0.1:8000;
    }

    server {
        listen       8080;
        server_name  host.domain1 host.domain2 host.domain3;

        location /ws/ {
            proxy_pass http://any_websocket;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            proxy_pass http://any_web;
            proxy_redirect default;
        }
    }

    server {
        listen       443;
        server_name  host.domain1;

        ssl on;
        ssl_certificate      /etc/pki/tls/certs/server.crt;
        ssl_certificate_key  /etc/pki/tls/certs/server.key;

        location /ws/ {
            proxy_pass http://any_websocket;
            proxy_redirect http:// https://;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            proxy_pass http://any_web;
            proxy_redirect http:// https://;
        }
    }