pid        /var/run/nginx.pid;
daemon off;

env REDIS_PORT_6379_TCP_ADDR;
env REDIS_PORT_6379_TCP_PORT;

events {
    worker_connections  256;
}


http {
    server {
        listen       80;
        server_name  l.com;

        location / {
            error_log  /dev/stdout debug;
            access_log  /dev/stdout;
            set $upstream "";
            rewrite_by_lua '
local redis = require "resty.redis"
local client = redis:new()
local ok, err = client:connect(os.getenv("REDIS_PORT_6379_TCP_ADDR"), os.getenv("REDIS_PORT_6379_TCP_PORT"))
print (ngx.var.upstream)
local balance, err = client:lrange("server", 0, -1)
-- print(balance)
local num = tonumber(client:get("index"))
-- print(num)
-- print(type(num))
ngx.var.upstream = balance[num]
print(ngx.var.test)
-- print(type(target))
print()
if table.getn(balance) - 1 < tonumber(num) then
num = 0
end
ngx.header["sample"] = "blah blah";
client:set("index",num + 1)
            ';
            proxy_pass http://$upstream/set;
        }


        location /set {

            content_by_lua '
                print(ngx.header["sample"])
                ngx.say(ngx.header["sample"])
            ';
        }
    }


}
