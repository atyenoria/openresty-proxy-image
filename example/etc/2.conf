# cache
http {
    ...
    proxy_cache_path /data/nginx/cache keys_zone=one:10m
                     loader_threshold=300 loader_files=200
                     max_size=200m;

    server {
        listen 8080;
        proxy_cache one;

        location / {
            proxy_pass http://backend1;
        }

        location /some/path {
            proxy_cache_valid any   1m;
            proxy_cache_min_uses 3;
            proxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;
            proxy_pass http://backend2;
        }
    }
}





# prevent cache error
fastcgi_cache_key $scheme$host$uri;
fastcgi_cache_key $scheme$request_method$host$request_uri;








# cache example
// キャッシュファイルを指定
proxy_cache_path /var/cache/nginx/static_file_cache levels=1:2 keys_zone=cache_static_file:128m inactive=7d max_size=480m;
proxy_temp_path /var/cache/nginx/temp;
// apacheサーバを指定
upstream backend {
    // ここではapacheを8080で動作
    server 127.0.0.1:8080;
}



server {
    listen       80; // nginxを80番ポートで起動
    server_name  atsu666.com;
    location / {
        // リバースプロキシの設定
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    set $mobile 0; // モバイルの変数を用意
        // UserAgentをみてモバイルからのアクセスか判定
    if ( $http_user_agent ~* (Android|iPhone) ) {
        set $mobile 1; // モバイルかの場合、変数に"1"をセット
    }
        // GETリクエスト以外はキャッシュをしない
    if ( $request_method != GET ) {
        proxy_pass http://backend; // すぐにapacheに転送
        break;
    }
        // Cookieにsidがある場合、a-blog cmsにログインしているとみなしキャッシュしない
    if ( $http_cookie ~* sid ) {
        proxy_pass http://backend; // すぐにapacheに転送
        break;
    }
        // キャッシュの設定
    proxy_cache cache_static_file;
        // キャッシュキー、モバイルは別キャッシュに
    proxy_cache_key $scheme$host$uri$args$mobile;
    proxy_cache_valid 200 2h;
    proxy_cache_valid any 1m;
    proxy_pass http://backend;
    }


}










# conf example
user www-data;
pid /var/run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 100000;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}
http {
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    access_log off;
    error_log /var/log/nginx/error.log crit;
    keepalive_timeout 10;
    client_header_timeout 10;
    client_body_timeout 10;
    reset_timedout_connection on;
    send_timeout 10;
    limit_conn_zone $binary_remote_addr zone=addr:5m;
    limit_conn addr 100;
    include /etc/nginx/mime.types;
    default_type text/html;
    charset UTF-8;
    gzip on;
    gzip_http_version 1.0;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}




# tcp kernel param
sysctl -w net.ipv4.ip_local_port_range="18000 65535"
sysctl -w net.ipv4.tcp_tw_reuse=1
sysctl -w net.ipv4.ip_dynaddr=1
sysctl -w net.ipv4.tcp_rfc1337=1
sysctl -w net.ipv4.tcp_fin_timeout=10
sysctl -w net.ipv4.tcp_keepalive_probes=5
sysctl -w net.ipv4.tcp_slow_start_after_idle=0
sysctl -w net.ipv4.tcp_max_syn_backlog=1024
sysctl -w net.core.somaxconn=65535



# rate limit
http {
    ...
    limit_conn_zone $binary_remote_addr zone=limit_per_ip:10m;
    limit_conn_log_level error;
    limit_conn_status 503;



    ...
}

location / {
    limit_conn limit_per_ip 30;
    ...
}

http {
    ...
    limit_rate 1m; #http, server, location, if

    limit_rate_after 2m;
    limit_rate 64k;

    limit_req_zone  $binary_remote_addr  zone=one:10m   rate=50r/s;
    limit_req zone=one burst=100;
    limit_req zone=one burst=100 nodelay;

    ...
}




#fix work
    location / {
        root   html;
        index  index.html index.htm;
        if ($remote_addr ~ ^172\.17\.42\.1$) {
                  break;
        }
        if (-f "/tmp/hoge" ) {
                  rewrite ^(.*)$ http://172.17.0.3:8000/maintenance.html? permanent;
        }
    }